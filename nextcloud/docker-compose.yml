version: '3'

volumes:
  nextcloud-redis-data:
     driver: local-persist
     driver_opts:
       mountpoint: ${CONTAINERVOLUME}/var/lib/redis
  nextcloud-postgres-data:
     driver: local-persist
     driver_opts:
       mountpoint: ${CONTAINERVOLUME}/var/lib/postgresql
  nextcloud-data:
     driver: local-persist
     driver_opts:
       mountpoint: ${CONTAINERVOLUME}/var/www/html/data
  nextcloud-config:
     driver: local-persist
     driver_opts:
       mountpoint: ${CONTAINERVOLUME}/var/www/html/config
  nextcloud-apps:
     driver: local-persist
     driver_opts:
       mountpoint: ${CONTAINERVOLUME}/var/www/html/custom_apps

services:
  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - nextcloud-redis-data:/data

  database:
    image: postgres:${POSTGRESQL_VERSION}
    restart: unless-stopped
    volumes:
      - nextcloud-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    command: ${DATABASE_COMMAND}

  application:
    image: nextcloud:stable-apache
    restart: unless-stopped
    environment:
      - UID=1000
      - GID=1000
      - UPLOAD_MAX_SIZE=10G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - REDIS_MAX_MEMORY=64mb
      - CRON_PERIOD=15m
      - TZ=Europe/Berlin
      - DB_TYPE=pgsql
      - DB_NAME=${DATABASE_NAME}
      - DB_USER=${DATABASE_USER}
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - DB_HOST=database
    depends_on:
      - database
      - redis
    volumes:
      - nextcloud-data:/var/www/html/data
      - nextcloud-config:/var/www/html/config
      - nextcloud-apps:/var/www/html/custom_apps
      - ./conf.d/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=https-redirect@file"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.rule=Host(`${VIRTUAL_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.middlewares=secured@file"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.tls.certresolver=http"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"
      - "traefik.docker.network=${PROXY_NETWORK}"
    networks:
      - proxy
      - default

networks:
  proxy:
    external:
      name: ${PROXY_NETWORK}
